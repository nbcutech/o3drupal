package  {		import flash.display.*;	import flash.net.*;	import flash.net.URLVariables;	import flash.events.*;		import com.bigspaceship.utils.Out;	import com.stimuli.mona.validators.EmailValidator;		import net.findzen.io.SendAndLoad;	import net.findzen.events.CustomEvent;			public class Form extends Sprite {				public static const RESULT			: String 	= "result";		public static const ERROR			: String 	= "error";				private const 		_MAX_LINES		: Number 	= 3;		private const 		_MAX_CHARS		: Number 	= 115;		//private const 		_POST_URL		: String 	= "http://features.oxygen.com/OxygenECard2010/email.php?debug=1";		private const 		_POST_URL		: String 	= "http://features.oxygen.com/OxygenECard2010/email.php?debug=1";						public function Form() {						name_txt.addEventListener(Event.CHANGE, 		_onChange);			email_txt.addEventListener(Event.CHANGE, 		_onChange);			recipients_txt.addEventListener(Event.CHANGE, 	_onChange);			message_txt.addEventListener(Event.CHANGE, 		_onChange);									// disable buttons			_enableButtons(false);						message_txt.text = '';			message_txt.maxChars = _MAX_CHARS;					}				private function _onChange($e:Event):void {						var error:String;						// check number of lines			if(message_txt.numLines > _MAX_LINES) {								error = "You are over the " + _MAX_LINES + " line maximum.";				_enableButtons(false);							} else {								// check character count				var count:Number = message_txt.maxChars - message_txt.length;								error = count + " characters remaining, " + _MAX_LINES + " lines max.";								// if fields have data, enable buttons				if(name_txt.length && email_txt.length && recipients_txt.length && message_txt.length) {										_enableButtons();									} else {										_enableButtons(false);									}							}						error_txt.text = error;					}				private function _enableButtons($b:Boolean = true):void {			if($b) {								preview_btn.mouseEnabled = send_btn.mouseEnabled = true;				preview_btn.alpha = send_btn.alpha = 1;							} else {								preview_btn.mouseEnabled = send_btn.mouseEnabled = false;				preview_btn.alpha = send_btn.alpha = .3;							}		}								private function _sendAndLoad($variables:URLVariables):void {			var thisSendAndLoad:SendAndLoad = new SendAndLoad(_POST_URL, $variables);						thisSendAndLoad.addEventListener(Event.COMPLETE, _onSendAndLoadComplete);			thisSendAndLoad.addEventListener(IOErrorEvent.IO_ERROR, _onSendAndLoadError);		}				private function _onSendAndLoadError($e:IOErrorEvent):void {			$e.target.removeEventListener(Event.COMPLETE, _onSendAndLoadComplete);			$e.target.removeEventListener(IOErrorEvent.IO_ERROR, _onSendAndLoadError);						Out.error(this, $e);						dispatchEvent($e);		}				private function _onSendAndLoadComplete($e:Event):void {			$e.target.removeEventListener(Event.COMPLETE, _onSendAndLoadComplete);			$e.target.removeEventListener(IOErrorEvent.IO_ERROR, _onSendAndLoadError);						var returnData:Object = $e.target.data;						if(returnData.hasOwnProperty(ERROR))  {								Out.error(this, returnData[ERROR]);								if(returnData[ERROR] == "Could not connect to host.") dispatchEvent(new IOErrorEvent(IOErrorEvent.IO_ERROR, true, false, returnData[ERROR]));				else 												  dispatchEvent(new ErrorEvent(ErrorEvent.ERROR, true, false, returnData[ERROR]));							} else if(returnData.hasOwnProperty(RESULT)) {								var infoObj:Object = returnData[RESULT];				dispatchEvent(new CustomEvent(Event.COMPLETE, true, false, infoObj));							}		}						 //////////////////////////////////////////////////////		// PUBLIC				public function submit():Boolean {						if(!EmailValidator.isValidEmailList(email_txt.text)) {								error_txt.text = "Please enter a valid email address.";				return false;							} else if(!EmailValidator.isValidEmailList(recipients_txt.text)) {								error_txt.text = "Please enter a valid recipient email address.";				return false;							} else {								var variables:URLVariables = new URLVariables();								variables.name 			= name_txt.text				variables.email 		= email_txt.text;				variables.recipients 	= recipients_txt.text;				variables.message 		= escape(message);								_sendAndLoad(variables);								return true;							}					}				public function get message():String {			var msg:String = message_txt.text + "\n \n" + "From,\n" + name_txt.text + ", Tori, Dean, Paris & all of us at Oxygen!";			return msg;		}			}	}